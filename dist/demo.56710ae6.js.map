{"version":3,"sources":["demo.ts"],"names":[],"mappings":"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","file":"demo.56710ae6.js","sourceRoot":"..","sourcesContent":["// Première partie\n\n// Système de constante et variable\n// Différent types\n\n// const firstName: string = 'Kévin';\n// const lastName: string = 'Wolff'; \n\nconst age: number = 30\n\nconst isHeWakeUp: boolean = false;\n\n// Tableau\nconst learners: any[] = ['Kevin', 30, true]\n\n// Objet\nconst learner: any = {\n    name: 'Kevin',\n    age: 30,\n    wakeUp: false\n}\n\n\n// Exercice # 4\n\nconst country: string = \"France\";\n\nfunction logCountryName(countryName: string) {\n  console.log(`Le pays est ${countryName}`);\n}\n\nlogCountryName(country);\n\n\n// Exercice # 5\n\nconst firstName: string = \"Samuel\";\nconst lastName: string = \"DA CONCEICAO\";\n\nfunction nomcomplet () {\n  console.log(firstName + \" \" + lastName);\n  console.log(`${firstName} ${lastName}`);\n}\n\nnomcomplet ();\n\n\n\n\n// Deuxième partie\n\n// Exercice # 1\n\nfunction printAddress(address: string, zipCode: number): void {\n  console.log(`Address: ${address}`);\n  console.log(`Zip Code: ${zipCode}`);\n}\n\nconst address: string = \"235 route de myans\";\nconst zipCode: number = 12345;\nconst addressFull: string = `${address}, ${zipCode}`;\n\nconsole.log(address, zipCode);\nconsole.log(addressFull);\n\n\n// Exercice # 2\n\nfunction displayFavoriteCountries() {\n  const favoriteCountries: string[] = [\"France\", \"Japan\", \"Italy\", \"Australia\", \"Canada\"];\n  \n  for (const country of favoriteCountries) {\n    console.log(country);\n  }\n}\n\ndisplayFavoriteCountries();\n\n\n// Exercice # 3\n\nfunction splitString(str: string): string[] {\n  const result: string[] = [];\n\n  for (let i = 0; i < str.length; i++) {\n    result.push(str[i]);\n  }\n\n  return result;\n}\n\n// const myString = \"developpement\";\n// const myStringArray = splitString(myString);\n// console.log(myStringArray);\n\n\n// Exercice # 4\n\nfunction joinString(arr: string[]): string {\n  let result = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    result += arr[i];\n  }\n\n  return result;\n}\n\nconst myStringArray: string[] = [\"d\", \"e\", \"v\", \"e\", \"l\", \"o\", \"p\", \"p\", \"e\", \"m\", \"e\", \"n\", \"t\"];\nconst myString = joinString(myStringArray);\nconsole.log(myString);\n\n\n\n\n// Troisième partie\n\n// Exercice # 1\n\nconst data: string[] = ['Théo', 'Martin', 'Lucas', 'Antoine', 'Etienne'];\n\nfor (let i = 0; i < data.length; i++) {\n  if (data[i].length <= 5) {\n    console.log(data[i]);\n  }\n}\n\n\n// Exercice # 2\n\nconst countries: string[] = ['France', 'Allemagne', 'Italie', 'Suisse', 'Belgique'];\nlet sentence: string = '';\n\nfor (let i = 0; i < countries.length; i++) {\n  sentence += countries[i];\n  if (i !== countries.length - 1) {\n    sentence += ', ';\n  }\n}\n\nconsole.log(sentence);\n\n\n// Exercice # 3\n\nconst numbers: number[] = [123, 999, 340, 12390];\nlet results: number[] = [];\n\nfor (let i = 0; i < numbers.length; i++) {\n  results.push(numbers[i] * 180);\n}\n\nconsole.log(results);\n\n\n// Exercice # 4\n\nconst person = {\n  name: 'Marchal',\n  surname: 'Mickeal',\n  age: 19\n};\n\nif (person.age >= 18) {\n  console.log(`${person.surname} est majeur`);\n}\n\n\n// Exercice # 5\n\nconst person = {\n  nom: 'Dupont',\n  prénom: 'Jean',\n  age: 42\n};\n\nconsole.log(`Bonjour, mon nom est ${person.nom} ${person.prénom}, j'ai ${person.age} ans.`);\n\n\n// Exercice # 6\n\nconst persons = [\n  { nom: 'Dupont', prénom: 'Jean', age: 42 },\n  { nom: 'Martin', prénom: 'Lucie', age: 28 },\n  { nom: 'Girard', prénom: 'Pierre', age: 35 },\n  { nom: 'Lefevre', prénom: 'Sophie', age: 20 },\n  { nom: 'Robert', prénom: 'Julien', age: 50 }\n];\n\nfor (let i = 0; i < persons.length; i++) {\n  console.log(`Bonjour, mon nom est ${persons[i].nom} ${persons[i].prénom}, j'ai ${persons[i].age} ans.`);\n}\n"]}